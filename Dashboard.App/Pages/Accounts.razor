@page "/accounts"
@using Dashboard.App.Models
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider
@using BlazorBootstrap;
@using System.Security.Claims
@using Dashboard.App.Components
@using System.Collections.Generic

<PageTitle>Accounts</PageTitle>

<AuthorizeView>
<div class="container-fluid">

    @foreach (var acc in BankAccounts)
    {
        <div class="row mb-3">
        <BankAccountCard AccountDto="acc" />
        </div>
    }
</div>
</AuthorizeView>




@code {
    private IList<BankAccountDto> BankAccounts { get; set; } = Enumerable.Empty<BankAccountDto>().ToList();
    private string UserId { get; set; } = string.Empty;
    private const string BackEndBaseUrl = "http://localhost:5170";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider
                .GetAuthenticationStateAsync();

        if (authState.User.Identity?.IsAuthenticated ?? false)
        {
            UserId = (authState.User?.Identity as ClaimsIdentity)?.Claims?.FirstOrDefault(x => x.Type == "oid")?.Value;
            try
            {
                var accounts = await Http.GetFromJsonAsync<ICollection<BankAccountDto>>($"/api/users/{UserId}/accounts");
                foreach(var acc in accounts)
                {
                    BankAccounts.Add(acc);
                }

                BankAccounts.Add(new BankAccountDto { AccountId = "2", AccountRef = "654321", AccountType = "Current", TotalBalance = 2000 });
                BankAccounts.Add(new BankAccountDto { AccountId = "3", AccountRef = "987654", AccountType = "Joint", TotalBalance = 3000 });
                BankAccounts.Add(new BankAccountDto { AccountId = "4", AccountRef = "456789", AccountType = "Savings", TotalBalance = 4000 });
                BankAccounts.Add(new BankAccountDto { AccountId = "5", AccountRef = "789456", AccountType = "Current", TotalBalance = 5000 });
                BankAccounts.Add(new BankAccountDto { AccountId = "6", AccountRef = "321654", AccountType = "Joint", TotalBalance = 6000 });
                BankAccounts.Add(new BankAccountDto { AccountId = "1", AccountRef = "123456", AccountType = "Savings", TotalBalance = 1000 });
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }

        }
    }
}
