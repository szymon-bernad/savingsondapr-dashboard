// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace SavingsOnDapr.Dashboard.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CurrencyExchangeOrder : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The beneficiaryExternalRef property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BeneficiaryExternalRef { get; set; }
#nullable restore
#else
        public string BeneficiaryExternalRef { get; set; }
#endif
        /// <summary>The debtorExternalRef property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DebtorExternalRef { get; set; }
#nullable restore
#else
        public string DebtorExternalRef { get; set; }
#endif
        /// <summary>The exchangeRate property</summary>
        public double? ExchangeRate { get; set; }
        /// <summary>The orderId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrderId { get; set; }
#nullable restore
#else
        public string OrderId { get; set; }
#endif
        /// <summary>The orderType property</summary>
        public global::SavingsOnDapr.Dashboard.Client.Models.ExchangeOrderType? OrderType { get; set; }
        /// <summary>The sourceAmount property</summary>
        public double? SourceAmount { get; set; }
        /// <summary>The sourceCurrency property</summary>
        public global::SavingsOnDapr.Dashboard.Client.Models.Currency? SourceCurrency { get; set; }
        /// <summary>The targetCurrency property</summary>
        public global::SavingsOnDapr.Dashboard.Client.Models.Currency? TargetCurrency { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::SavingsOnDapr.Dashboard.Client.Models.CurrencyExchangeOrder"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::SavingsOnDapr.Dashboard.Client.Models.CurrencyExchangeOrder CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::SavingsOnDapr.Dashboard.Client.Models.CurrencyExchangeOrder();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "beneficiaryExternalRef", n => { BeneficiaryExternalRef = n.GetStringValue(); } },
                { "debtorExternalRef", n => { DebtorExternalRef = n.GetStringValue(); } },
                { "exchangeRate", n => { ExchangeRate = n.GetDoubleValue(); } },
                { "orderId", n => { OrderId = n.GetStringValue(); } },
                { "orderType", n => { OrderType = n.GetEnumValue<global::SavingsOnDapr.Dashboard.Client.Models.ExchangeOrderType>(); } },
                { "sourceAmount", n => { SourceAmount = n.GetDoubleValue(); } },
                { "sourceCurrency", n => { SourceCurrency = n.GetEnumValue<global::SavingsOnDapr.Dashboard.Client.Models.Currency>(); } },
                { "targetCurrency", n => { TargetCurrency = n.GetEnumValue<global::SavingsOnDapr.Dashboard.Client.Models.Currency>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("beneficiaryExternalRef", BeneficiaryExternalRef);
            writer.WriteStringValue("debtorExternalRef", DebtorExternalRef);
            writer.WriteDoubleValue("exchangeRate", ExchangeRate);
            writer.WriteStringValue("orderId", OrderId);
            writer.WriteEnumValue<global::SavingsOnDapr.Dashboard.Client.Models.ExchangeOrderType>("orderType", OrderType);
            writer.WriteDoubleValue("sourceAmount", SourceAmount);
            writer.WriteEnumValue<global::SavingsOnDapr.Dashboard.Client.Models.Currency>("sourceCurrency", SourceCurrency);
            writer.WriteEnumValue<global::SavingsOnDapr.Dashboard.Client.Models.Currency>("targetCurrency", TargetCurrency);
        }
    }
}
#pragma warning restore CS0618
